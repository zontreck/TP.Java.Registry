/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'idea'
    id 'eclipse'
    id 'maven-publish'
}

group = "dev.zontreck"
archivesBaseName = "Registry"

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
    withSourcesJar()
}

def determinePatchVersion = {
    // get the name of the last tag
    def tagInfo = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = tagInfo
    }
    tagInfo = tagInfo.toString()

    if (!tagInfo.contains('-')) {
        return 0
    }
    return tagInfo.split("-")[1]
}
version = determinePatchVersion()
version = "${apiVer}.${version}"
repositories {
    // Use Maven Central for resolving dependencies.
    // mavenCentral()
    maven {
        url = "https://maven.zontreck.dev/repository/internal"
        name = "Aria's Creations"
    }
}

dependencies {

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'
}

def MAVEN_PASSWORD_PROPERTY = "AriasCreationsMavenPassword"

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact sourcesJar
            artifact jar
        }
    }
    repositories {
        maven {
            url = "https://maven.zontreck.dev/repository/zontreck"
            name = "ariascreations"
            if (project.findProperty(MAVEN_PASSWORD_PROPERTY) != null) {
                credentials {
                    username = "admin"
                    password = project.findProperty(MAVEN_PASSWORD_PROPERTY)
                }
            }
        }
    }
}

compileJava.finalizedBy("sourcesJar")
artifacts {
    archives jar
    archives sourcesJar
}
